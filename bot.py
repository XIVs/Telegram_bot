# bot.py
from telegram import Update
from telegram.ext import Updater, MessageHandler, Filters, CallbackContext, CommandHandler
import os
from config import TELEGRAM_TOKEN
from utils.visualize import process_audio_to_video

def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∞—É–¥–∏–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è —Å–æ–∑–¥–∞–º –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫ —Å –≤–∏–Ω–∏–ª–æ–º üéµ")

def handle_audio(update: Update, context: CallbackContext):
    file = update.message.voice or update.message.audio or update.message.document

    if not file:
        update.message.reply_text("–ù–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    if update.message.document and not update.message.document.mime_type.startswith("audio/"):
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª (MP3, WAV, M4A –∏ —Ç.–¥.).")
        return

    file_id = file.file_id
    new_file = context.bot.get_file(file_id)
    input_path = f"temp_{file_id}.ogg"
    new_file.download(input_path)

    output_path = process_audio_to_video(input_path)

    if output_path:
        with open(output_path, 'rb') as video:
            context.bot.send_video_note(chat_id=update.message.chat_id, video_note=video)
        os.remove(output_path)
    else:
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ.")

    os.remove(input_path)

def main():
    from telegram.ext import Updater  # –∏–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å –ø–æ–º–æ–≥–∞–µ—Ç –∏–Ω–æ–≥–¥–∞ IDE

    updater = Updater(token=TELEGRAM_TOKEN, use_context=True)
    dispatcher = updater.dispatcher  # —è–≤–Ω–æ –∏–º–µ–Ω—É–µ–º dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(MessageHandler(Filters.voice | Filters.audio | Filters.document, handle_audio))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
